version: '3.8'

services:
  # 后端服务
  backend:
    build: .
    container_name: smart-cs-backend
    ports:
      - "5002:5002"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql://smartcs:smartcs123@mysql:3306/smart_cs
      - SECRET_KEY=your-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - QWEN_API_KEY=${QWEN_API_KEY:-}
      - QWEN_MODEL=${QWEN_MODEL:-qwen-turbo}
      - ERNIE_API_KEY=${ERNIE_API_KEY:-}
      - ERNIE_SECRET_KEY=${ERNIE_SECRET_KEY:-}
      - ERNIE_MODEL=${ERNIE_MODEL:-ernie-bot-turbo}
      - ALERT_SMTP_SERVER=${ALERT_SMTP_SERVER:-}
      - ALERT_SMTP_PORT=${ALERT_SMTP_PORT:-587}
      - ALERT_EMAIL_USERNAME=${ALERT_EMAIL_USERNAME:-}
      - ALERT_EMAIL_PASSWORD=${ALERT_EMAIL_PASSWORD:-}
      - ALERT_EMAIL_TO=${ALERT_EMAIL_TO:-}
      - ALERT_WEBHOOK_URL=${ALERT_WEBHOOK_URL:-}
      - ALERT_WEBHOOK_TYPE=${ALERT_WEBHOOK_TYPE:-generic}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - smart-cs-network

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: smart-cs-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=smart_cs
      - MYSQL_USER=smartcs
      - MYSQL_PASSWORD=smartcs123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - smart-cs-network

  # Redis 缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: smart-cs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - smart-cs-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: smart-cs-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./qianduan/dist:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - smart-cs-network

  # 前端构建服务（开发环境）
  frontend-dev:
    image: node:18-alpine
    container_name: smart-cs-frontend-dev
    working_dir: /app
    volumes:
      - ./qianduan:/app
    ports:
      - "5174:5174"
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0 --port 5174"
    profiles:
      - dev
    networks:
      - smart-cs-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  smart-cs-network:
    driver: bridge
